generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  avatar    String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz(6)
  Wallet    Wallet?

  Transactions         Transaction[] @relation("UserTransactions")
  ReceivedTransactions Transaction[] @relation("ReceiverTransactions")

  @@map("users")
}

model Wallet {
  id       String @id @default(uuid())
  userId   String @unique @map("user_id")
  balance  Int    @default(0)
  currency String @default("VND")

  user User @relation(fields: [userId], references: [id])

  @@map("wallets")
}

model Transaction {
  id          String   @id @default(uuid())
  userId      String   @map("user_id")
  type        String
  amount      Int
  toUserId    String?  @map("to_user_id")
  description String?
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamptz(6)

  user        User         @relation("UserTransactions", fields: [userId], references: [id])
  toUser      User?        @relation("ReceiverTransactions", fields: [toUserId], references: [id])
  BillPayment BillPayment?

  @@map("transactions")
}

model BillPayment {
  id            String     @id @default(uuid())
  transactionId String     @unique @map("transaction_id")
  billType      BillType   @map("bill_type")
  providerId    String     @map("provider_id")
  customerCode  String     @map("customer_code")
  amount        Int
  description   String?
  status        BillStatus @default(pending)
  paidAt        DateTime?  @map("paid_at") @db.Timestamptz(6)
  createdAt     DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)

  transaction Transaction     @relation(fields: [transactionId], references: [id])
  provider    ServiceProvider @relation(fields: [providerId], references: [id])

  @@map("bill_payments")
}

model ServiceProvider {
  id        String     @id @default(uuid())
  name      String     @unique
  code      String     @unique
  billTypes BillType[] @default([]) @map("bill_types")
  isActive  Boolean    @default(true) @map("is_active")
  createdAt DateTime   @default(now()) @map("created_at") @db.Timestamptz(6)

  BillPayments BillPayment[]

  @@map("service_providers")
}

enum TransactionType {
  topup
  withdraw
  transferOut @map("transfer_out")
  transferIn  @map("transfer_in")
  payBill     @map("pay_bill")
}

enum BillType {
  electricity
  water
  telecom
  internet
  tv
}

enum BillStatus {
  pending
  success
  failed
  cancelled
}
